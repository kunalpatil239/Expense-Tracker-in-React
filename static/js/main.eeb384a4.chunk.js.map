{"version":3,"sources":["components/Header.js","Context/AppReducer.js","Context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","amounts","useContext","map","amount","console","log","total","reduce","acc","item","toFixed","IncomeExpenses","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eeb384a4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Header = () => {\r\n  return <h2>Expense Tracker</h2>;\r\n};\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter((transaction) => {\r\n          return transaction.id !== action.payload;\r\n        }),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n//initial state\r\n\r\nconst initialState = {\r\n  transactions: [],\r\n};\r\n\r\n//Creacte context\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//provider component\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  //actions\r\n\r\n  function deleteTransaction(id) {\r\n    dispatch({ type: \"DELETE_TRANSACTION\", payload: id });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({ type: \"ADD_TRANSACTION\", payload: transaction });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  console.log(amounts);\r\n\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>${total}</h1>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">{income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">{expense}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n  return (\r\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n      {transaction.text}{\" \"}\r\n      <span>\r\n        {sign}${Math.abs(transaction.amount)}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\nimport { Transaction } from \"./Transaction\";\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../Context/GlobalState\";\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount, //as amount written in input is always string\r\n    };\r\n\r\n    addTransaction(newTransaction);\r\n    setText(\"\");\r\n    setAmount(\"\");\r\n  };\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import { Header } from \"./components/Header\";\nimport { Balance } from \"./components/Balance\";\nimport { IncomeExpenses } from \"./components/IncomeExpenses\";\nimport { TransactionList } from \"./components/TransactionList\";\nimport \"./App.css\";\nimport { AddTransaction } from \"./components/AddTransaction\";\n\nimport { GlobalProvider } from \"./Context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}